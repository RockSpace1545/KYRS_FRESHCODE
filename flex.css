.parent{
    height: 600px;
    border: 2px solid black;
    display: flex; /*вмикає flex для блоку*/
    flex-direction: row; /*напрямок вісі */
    justify-content: center;
    align-items: flex-start;
    /* flex-wrap: wrap; */
}

.item{
    width: 80px;
    height: 80px;
    background-color: forestgreen;
    border: 2px solid blue;
    color: white;
    font-size: 25px;
    /* flex-basis: 100px;
    flex-grow: 1;
    flex-shrink: 1; */
    margin: 15px;
}

/* .third{
    flex-grow: 5;
}
*/
.fourth{
    margin-left: auto;
} 

.fifth{
    margin-left: auto;
}
/* 
Flexbox Layout

Parent Container

Головна вісь (main axis)
Якщо flex-direction дорівнює row - головна вісь зліва направо, побічна - (across axis) зверху вниз
Якщо flex-direction дорівнює column - головна вісь зверху вниз, побічна - (across axis) зліва направо
Якщо flex-direction дорівнює row-reverse - головна вісь справа наліво
Якщо flex-direction дорівнює column-reverse - головна вісь знизу вверх
justify-content: розташування дітей за головною віссю батьківського контейнера
flex-start - всі на початку осі
flex-end - всі в кінці осі
center - ро центру
space-betwen - Х...Х...Х
space-around - ..Х....Х....Х..
space-evenly - ...X...X...X...

align-items: розташування дітей за побічною віссю батьківського контейнера
stretch - розтягування елементів донизу на стільки, скільки дозволяє нам блок, в якому розташованні елементи
flex-wrap: перенос елементів, які не влазять на наступний рядок




-----------------
Child items - властивості дітей
flex-basis (базис) - потенційний розмір дитини за головною віссю
flex-grow (рости) - коефіцієнт зростання розмірів, якщо у батька залишається вільний простір
flex-shrink (стискатися) - коефіцієнт зменшення розмірів, якщо у розміри батька не поміщається суми всіх flex-basis дітей
*/